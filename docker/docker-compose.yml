name: sentences-chunker

services:
  # 1. Define a common base service (no profile, no ports)
  base-service:
    build:
      context: ..
      dockerfile: docker/Dockerfile.gpu  # Default to GPU version
    image: sentences-chunker:latest 
    restart: unless-stopped
    volumes:
      - sentences_chunker_models:/app/models
      - sentences_chunker_logs:/app/logs
    environment:
      - TOKENIZERS_PARALLELISM=false
      - LOG_LEVEL=INFO

      # Cache and Threading Optimizations
      - WTPSPLIT_CACHE_DIR=/app/models
      - MODEL_CACHE_TIMEOUT=${MODEL_CACHE_TIMEOUT:-3600}
      - OMP_NUM_THREADS=${OMP_NUM_THREADS:-4}
      - MKL_NUM_THREADS=${MKL_NUM_THREADS:-4}

      # GPU Memory Optimizations
      - PYTORCH_CUDA_ALLOC_CONF=max_split_size_mb:512
      - CUDA_LAUNCH_BLOCKING=0
      - CUDA_CACHE_DISABLE=0
      
      # Performance Tuning
      - PYTHONUNBUFFERED=1
      - TORCH_CUDNN_V8_API_ENABLED=1
    healthcheck:
      # Healthcheck needs to target port 8000 inside the container
      test: [ "CMD", "curl", "-f", "http://localhost:8000/", "||", "exit", "1" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s 
    networks:
      - deep-rag

  # 2. Define the CPU service extending the base
  cpu:
    extends:
      service: base-service
    container_name: sentences-chunker-cpu 
    profiles:
      - cpu
    ports:
      - "${APP_PORT:-8000}:8000" 
  

  # 3. Define the GPU service extending the base
  gpu:
    extends:
      service: base-service
    container_name: sentences-chunker-gpu
    profiles:
      - gpu
    ports:
      - "${APP_PORT:-8000}:8000" 
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [ compute, utility ]

volumes:
  sentences_chunker_models:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ../models
  sentences_chunker_logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ../logs

networks:
  deep-rag:
    name: deep-rag
    driver: bridge
