# GPU-optimized image (CUDA 12.1 runtime)

# Stage 1: Builder - install Python deps into venv on same base to avoid ABI issues
FROM nvidia/cuda:12.1.0-runtime-ubuntu22.04 AS builder

ENV DEBIAN_FRONTEND=noninteractive

# System deps and Python
RUN apt-get update && apt-get install -y --no-install-recommends \
    python3.10 \
    python3.10-venv \
    python3-pip \
    libgomp1 \
    curl \
    build-essential \
    && rm -rf /var/lib/apt/lists/*

# Create venv
RUN python3.10 -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Upgrade pip
RUN python -m pip install --upgrade pip

WORKDIR /app

# Install Python deps
COPY docker/requirements.gpu.txt requirements.txt
RUN pip install --no-cache-dir -r requirements.txt

# Copy app
COPY sentences_chunker.py /app/sentences_chunker.py
RUN mkdir -p /app/models /app/logs

# Stage 2: Runtime
FROM nvidia/cuda:12.1.0-runtime-ubuntu22.04

ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PATH="/opt/venv/bin:$PATH" \
    NVIDIA_DRIVER_CAPABILITIES=compute,utility \
    NVIDIA_VISIBLE_DEVICES=all \
    TOKENIZERS_PARALLELISM=false

WORKDIR /app

# System runtime deps and Python
RUN apt-get update && apt-get install -y --no-install-recommends \
    python3.10 \
    libgomp1 \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Copy venv and app
COPY --from=builder /opt/venv /opt/venv
COPY --from=builder /app/sentences_chunker.py /app/sentences_chunker.py
COPY --from=builder /app/models /app/models
COPY --from=builder /app/logs /app/logs

# Non-root user
RUN groupadd -r appgroup && useradd -r -g appgroup -m -d /home/appuser -s /sbin/nologin appuser \
  && chown -R appuser:appgroup /app /opt/venv /home/appuser \
  && chmod -R 755 /app \
  && chmod -R u+w /app/logs /app/models

USER appuser

EXPOSE 8000

CMD ["uvicorn", "sentences_chunker:app", "--host", "0.0.0.0", "--port", "8000", "--workers", "1", "--limit-concurrency", "50", "--loop", "uvloop", "--http", "httptools"]
